[init]
defaultBranch = main

[core]
editor = code --wait

[clean]
requireForce = true

[log]
decorate = full

[fetch]
prune = true

[merge]
tool = vscode

[mergetool "vscode"]
cmd = code --wait $MERGED

[diff]
tool = vscode

[difftool "vscode"]
cmd = code --wait --diff $LOCAL $REMOTE

[alias]
a = add --verbose
s = status --short

acp = !"f() { if [ -n "$1" ]; then git a -i "$1"; else git a -i . ; fi; git commit; git pull --rebase --autostash; git push; };f"

last = log -1 HEAD
logp = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --abbrev-commit
logd = logp --patch
viz = !gitk

unstage = reset HEAD --
uncommit = reset --soft HEAD^
recommit = commit --amend --no-edit
recommit-edit = commit --amend

clean-merged-local = !git fetch -ap && git branch --merged | grep -Ev '^[[:blank:]]*(\\*|main|master|dev)' | xargs -tpr -n 1 git branch -d
clean-merged-remote = !git fetch -ap && git branch -r --merged | grep -Ev '(\\*|/main|/master|/dev)' | sed -e 's/\\//\\ /' | xargs -tpr -n 2 git push -d
merge-test = !git merge --no-commit --no-ff $@ || echo "Run \\'git merge --abort\\' if you don\\'t want to commit the changes from merging"
